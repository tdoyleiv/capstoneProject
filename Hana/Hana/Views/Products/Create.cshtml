@using System.Globalization;
@model Hana.Models.Product

@{
    ViewBag.Title = "Add a new product";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           @Html.LabelFor(m => m.Price, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-md-10">
               @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
           </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.LastUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.LastUpdated, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("dd/MM/yyyy h:mm:ss", CultureInfo.InvariantCulture) } })
                @Html.ValidationMessageFor(m => m.LastUpdated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.SizeID, "Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SizeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SizeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ProductTypeID, "Product Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProductTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.IsSoldOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(m => m.IsSoldOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.IsSoldOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    }
